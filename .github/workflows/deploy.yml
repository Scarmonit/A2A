name: Deploy A2A MCP Agents

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Test agent functionality
      run: |
        timeout 30s node dist/index.js &
        sleep 5
        echo '{"jsonrpc":"2.0","id":1,"method":"tools/call","params":{"name":"agent_control","arguments":{"action":"get_stats"}}}' | nc localhost 8787 || true

  deploy-railway:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Railway
      uses: railwayapp/railway-cli@v3
      with:
        command: up --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-render:
    needs: test  
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      uses: sws2apps/render-deployment@main
      with:
        serviceId: ${{ secrets.RENDER_SERVICE_ID }}
        apiKey: ${{ secrets.RENDER_API_KEY }}

  deploy-fly:
    needs: test
    runs-on: ubuntu-latest  
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Fly.io CLI
      uses: superfly/flyctl-actions/setup-flyctl@master
    
    - name: Deploy to Fly.io
      run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-vercel:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        vercel-args: '--prod'