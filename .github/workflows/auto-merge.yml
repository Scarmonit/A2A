name: Auto Merge

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  check_suite:
    types: [completed]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to auto-merge'
        required: true
        type: number

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    name: Auto Merge PR
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'pull_request' && 
       !contains(github.event.pull_request.labels.*.name, 'blocked') &&
       !contains(github.event.pull_request.labels.*.name, 'needs:review'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.payload.pull_request?.number || 
                             context.payload.inputs?.pr_number;
            
            if (!pr_number) {
              core.setFailed('No PR number found');
              return;
            }
            
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number
            });
            
            core.setOutput('pr_number', pr_number);
            core.setOutput('title', pr.title);
            core.setOutput('body', pr.body);
            core.setOutput('draft', pr.draft);
            core.setOutput('mergeable', pr.mergeable);
            
            // Check for BREAKING CHANGE
            const hasBreakingChange = pr.title.includes('BREAKING CHANGE') || 
                                     pr.body?.includes('BREAKING CHANGE');
            core.setOutput('has_breaking_change', hasBreakingChange);
            
            return pr;

      - name: Check blocking conditions
        id: check
        run: |
          echo "Checking auto-merge conditions..."
          
          # Check if draft
          if [ "${{ steps.pr.outputs.draft }}" == "true" ]; then
            echo "blocked=true" >> $GITHUB_OUTPUT
            echo "reason=PR is in draft state" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check for breaking changes
          if [ "${{ steps.pr.outputs.has_breaking_change }}" == "true" ]; then
            echo "blocked=true" >> $GITHUB_OUTPUT
            echo "reason=PR contains BREAKING CHANGE" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check if mergeable
          if [ "${{ steps.pr.outputs.mergeable }}" == "false" ]; then
            echo "blocked=true" >> $GITHUB_OUTPUT
            echo "reason=PR has merge conflicts" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "blocked=false" >> $GITHUB_OUTPUT

      - name: Wait for checks
        if: steps.check.outputs.blocked != 'true'
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'CI Status Check'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Enable auto-merge
        if: steps.check.outputs.blocked != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ steps.pr.outputs.pr_number }};
            
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number,
                merge_method: 'squash',
                commit_title: `${{ steps.pr.outputs.title }} (#${pr_number})`,
                commit_message: 'Auto-merged by GitHub Actions\n\n${{ steps.pr.outputs.body }}'
              });
              
              console.log('PR auto-merged successfully');
            } catch (error) {
              core.setFailed(`Failed to auto-merge: ${error.message}`);
            }

      - name: Add comment if blocked
        if: steps.check.outputs.blocked == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.pr.outputs.pr_number }},
              body: `ðŸš« Auto-merge blocked: ${{ steps.check.outputs.reason }}\n\n` +
                    `Please review and merge manually.`
            });
