name: Awesome Lists Synchronization

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/awesome-lists-sync.yml'

jobs:
  sync-awesome-lists:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        awesome-list:
          - { repo: 'sindresorhus/awesome', category: 'general', path: 'awesome-general' }
          - { repo: 'awesome-selfhosted/awesome-selfhosted', category: 'selfhosted', path: 'awesome-selfhosted' }
          - { repo: 'avelino/awesome-go', category: 'golang', path: 'awesome-go' }
          - { repo: 'awesome-python/awesome-python', category: 'python', path: 'awesome-python' }
          - { repo: 'enaqx/awesome-react', category: 'react', path: 'awesome-react' }
          - { repo: 'vuejs/awesome-vue', category: 'vue', path: 'awesome-vue' }
          - { repo: 'dkhamsing/awesome-ios', category: 'ios', path: 'awesome-ios' }
          - { repo: 'JStumpp/awesome-android', category: 'android', path: 'awesome-android' }
      fail-fast: false
      max-parallel: 8
    
    steps:
      - name: Checkout A2A Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Git Configuration
        run: |
          git config --global user.name 'A2A Automation Bot'
          git config --global user.email 'automation@a2a.bot'
      
      - name: Clone Awesome List Repository
        run: |
          mkdir -p temp/${{ matrix.awesome-list.path }}
          git clone --depth 1 https://github.com/${{ matrix.awesome-list.repo }}.git temp/${{ matrix.awesome-list.path }}
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml markdown beautifulsoup4 requests
      
      - name: Parse and Transform Awesome List
        run: |
          python << 'EOF'
          import os
          import re
          import json
          from pathlib import Path
          
          source_path = Path('temp/${{ matrix.awesome-list.path }}')
          target_path = Path('data/awesome-lists/${{ matrix.awesome-list.category }}')
          target_path.mkdir(parents=True, exist_ok=True)
          
          readme_file = source_path / 'README.md'
          if readme_file.exists():
              content = readme_file.read_text(encoding='utf-8')
              
              # Extract links and descriptions
              pattern = r'\[([^\]]+)\]\(([^\)]+)\)\s*-?\s*(.*)'
              matches = re.findall(pattern, content)
              
              data = []
              for name, url, description in matches:
                  if url.startswith('http'):
                      data.append({
                          'name': name.strip(),
                          'url': url.strip(),
                          'description': description.strip(),
                          'category': '${{ matrix.awesome-list.category }}',
                          'source': '${{ matrix.awesome-list.repo }}'
                      })
              
              # Save as JSON
              output_file = target_path / 'links.json'
              with open(output_file, 'w', encoding='utf-8') as f:
                  json.dump(data, f, indent=2, ensure_ascii=False)
              
              print(f"Processed {len(data)} items from ${{ matrix.awesome-list.repo }}")
              
              # Create markdown summary
              summary_file = target_path / 'README.md'
              with open(summary_file, 'w', encoding='utf-8') as f:
                  f.write(f"# Awesome {matrix.awesome-list.category.title()}\n\n")
                  f.write(f"Synchronized from [{matrix.awesome-list.repo}](https://github.com/${{ matrix.awesome-list.repo }})\n\n")
                  f.write(f"Total items: {len(data)}\n\n")
                  for item in data[:20]:  # Top 20
                      f.write(f"- [{item['name']}]({item['url']})")
                      if item['description']:
                          f.write(f" - {item['description']}")
                      f.write("\n")
          EOF
      
      - name: Integrate into A2A Structure
        run: |
          python << 'EOF'
          import json
          from pathlib import Path
          
          # Load synchronized data
          data_file = Path('data/awesome-lists/${{ matrix.awesome-list.category }}/links.json')
          if data_file.exists():
              with open(data_file, 'r', encoding='utf-8') as f:
                  items = json.load(f)
              
              # Create A2A integration file
              integration_path = Path('integrations/awesome-lists')
              integration_path.mkdir(parents=True, exist_ok=True)
              
              integration_file = integration_path / f'${{ matrix.awesome-list.category }}.json'
              
              a2a_format = {
                  'metadata': {
                      'source': '${{ matrix.awesome-list.repo }}',
                      'category': '${{ matrix.awesome-list.category }}',
                      'last_sync': '${{ github.run_id }}',
                      'total_items': len(items)
                  },
                  'resources': items
              }
              
              with open(integration_file, 'w', encoding='utf-8') as f:
                  json.dump(a2a_format, f, indent=2, ensure_ascii=False)
              
              print(f"Created A2A integration for ${{ matrix.awesome-list.category }}")
          EOF
      
      - name: Generate Sync Report
        run: |
          echo "## Sync Report: ${{ matrix.awesome-list.category }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ matrix.awesome-list.repo }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Category**: ${{ matrix.awesome-list.category }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "data/awesome-lists/${{ matrix.awesome-list.category }}/links.json" ]; then
            COUNT=$(jq 'length' data/awesome-lists/${{ matrix.awesome-list.category }}/links.json)
            echo "- **Items Synced**: $COUNT" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: awesome-${{ matrix.awesome-list.category }}
          path: |
            data/awesome-lists/${{ matrix.awesome-list.category }}/
            integrations/awesome-lists/${{ matrix.awesome-list.category }}.json
          retention-days: 30
  
  consolidate-results:
    needs: sync-awesome-lists
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      
      - name: Consolidate Data
        run: |
          mkdir -p data/awesome-lists integrations/awesome-lists
          
          # Move all artifacts to proper locations
          find artifacts/ -name 'links.json' -exec sh -c 'cp "$1" "data/awesome-lists/$(basename $(dirname "$1"))/"' _ {} \;
          find artifacts/ -name '*.json' -path '*/integrations/*' -exec cp {} integrations/awesome-lists/ \;
      
      - name: Create Master Index
        run: |
          python << 'EOF'
          import json
          from pathlib import Path
          from datetime import datetime
          
          integrations = Path('integrations/awesome-lists')
          all_data = []
          
          for file in integrations.glob('*.json'):
              with open(file, 'r', encoding='utf-8') as f:
                  data = json.load(f)
                  all_data.append(data)
          
          master_index = {
              'last_updated': datetime.utcnow().isoformat(),
              'total_categories': len(all_data),
              'total_resources': sum(d['metadata']['total_items'] for d in all_data),
              'categories': all_data
          }
          
          with open('integrations/awesome-lists/index.json', 'w', encoding='utf-8') as f:
              json.dump(master_index, f, indent=2, ensure_ascii=False)
          
          print(f"Master index created with {len(all_data)} categories")
          EOF
      
      - name: Commit and Push Changes
        run: |
          git config --global user.name 'A2A Automation Bot'
          git config --global user.email 'automation@a2a.bot'
          
          git add data/awesome-lists/ integrations/awesome-lists/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: sync awesome lists [automated] - $(date +'%Y-%m-%d %H:%M:%S')"
            git push
          fi
      
      - name: Generate Final Summary
        run: |
          echo "# ðŸŽ‰ Awesome Lists Synchronization Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "integrations/awesome-lists/index.json" ]; then
            TOTAL_CATS=$(jq '.total_categories' integrations/awesome-lists/index.json)
            TOTAL_RES=$(jq '.total_resources' integrations/awesome-lists/index.json)
            echo "- **Total Categories**: $TOTAL_CATS" >> $GITHUB_STEP_SUMMARY
            echo "- **Total Resources**: $TOTAL_RES" >> $GITHUB_STEP_SUMMARY
          fi
