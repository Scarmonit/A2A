# A2A MCP Server - Production Configuration Template
# Copy this file to .env and customize for your production environment

# ===== ENVIRONMENT =====
NODE_ENV=production

# ===== DATABASE SETTINGS =====
# PostgreSQL connection string for Prisma
# IMPORTANT: Change these credentials!
DATABASE_URL=postgresql://a2a_user:CHANGE_THIS_PASSWORD@localhost:5432/a2a_production?schema=public

# For cloud databases (Railway, Render, etc.):
# DATABASE_URL=postgresql://user:password@your-db-host.railway.app:5432/railway?schema=public

# ===== OLLAMA SETTINGS =====
LOCAL_LLM_URL=http://localhost:11434

# Production models - use faster, more efficient models
DEFAULT_CODE_MODEL=codellama:7b-code
DEFAULT_CHAT_MODEL=llama2:7b-chat
DEFAULT_CREATIVE_MODEL=llama2:13b-chat
DEFAULT_FAST_MODEL=phi3:mini

# ===== SERVER SETTINGS =====
# Port configuration
PORT=8787
STREAM_PORT=8787
STREAM_HOST=0.0.0.0
METRICS_PORT=8787

# ===== SECURITY =====
# IMPORTANT: Generate a secure token with: openssl rand -hex 32
STREAM_TOKEN=CHANGE_THIS_TO_SECURE_RANDOM_TOKEN

# ===== PERFORMANCE TUNING =====
# Adjust based on your server capacity
# For 2-4 CPU cores, 4-8GB RAM:
MAX_CONCURRENCY=50
MAX_QUEUE_SIZE=10000

# For 8+ CPU cores, 16GB+ RAM:
# MAX_CONCURRENCY=200
# MAX_QUEUE_SIZE=50000

# For low-resource servers (1-2 CPU cores, 2-4GB RAM):
# MAX_CONCURRENCY=10
# MAX_QUEUE_SIZE=1000

# ===== LOGGING =====
# Production log level (info, warn, error)
LOG_LEVEL=info

# ===== STREAMING =====
# Enable streaming for real-time responses
ENABLE_STREAMING=true

# ===== OLLAMA PERFORMANCE =====
# GPU acceleration (-1 = auto-detect, 0 = CPU only, >0 = layers on GPU)
OLLAMA_GPU_LAYERS=-1

# Parallel processing
OLLAMA_NUM_PARALLEL=4
OLLAMA_MAX_LOADED_MODELS=2
OLLAMA_FLASH_ATTENTION=1

# ===== WARP-SPECIFIC OLLAMA CONFIGURATION =====
WARP_OLLAMA_ENABLED=true
WARP_GPU_MONITORING=true
WARP_MODEL_PRELOAD=true
WARP_MAX_PARALLEL_REQUESTS=3
WARP_MODEL_CACHE_SIZE=4096
WARP_OPTIMIZED_CONTEXT=true
WARP_BATCH_SIZE=512
WARP_NUM_THREADS=8
WARP_EFFICIENT_ATTENTION=true
WARP_WARMUP_ENABLED=true
WARP_GPU_DEVICE=0
WARP_LOW_MEMORY_MODE=false
WARP_CONTEXT_SIZE=4096
WARP_PREDICT_BATCH_SIZE=128

# ===== MEMORY & STORAGE =====
# Agent execution limits
MAX_EXECUTION_TIME=60000
MAX_FILE_SIZE=10485760

# Memory system configuration
MEMORY_DIR=/opt/a2a/data/agent-memory
MAX_MEMORIES_PER_AGENT=10000

# ===== TIMEOUTS =====
# Request and idempotency TTL
REQUEST_TTL_MS=300000        # 5 minutes
IDEMP_TTL_MS=900000          # 15 minutes

# ===== ANALYTICS =====
MAX_EVENT_HISTORY=100000
ANALYTICS_CLEANUP_INTERVAL=86400000  # 24 hours

# ===== NODE OPTIONS =====
# Memory allocation for Node.js
NODE_OPTIONS=--max-old-space-size=2048

# For high-memory servers:
# NODE_OPTIONS=--max-old-space-size=4096

# For low-memory servers:
# NODE_OPTIONS=--max-old-space-size=512

# ===== VOYAGE AI (Optional) =====
# Get your API key from https://dash.voyageai.com
VOYAGE_API_KEY=your-voyage-api-key-here

# Vector database configuration
RAG_DB_PATH=/opt/a2a/data/vector_db
RAG_MAX_CHUNK_TOKENS=15000
RAG_REINDEX_INTERVAL=weekly

# ===== MONITORING =====
# Prometheus metrics
METRICS_ENABLED=true

# ===== CORS (if needed) =====
# CORS_ORIGIN=https://your-frontend-domain.com
# CORS_CREDENTIALS=true

# ===== RATE LIMITING =====
# Application-level rate limiting (requests per minute per IP)
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# ===== BACKUP =====
# Backup directory
BACKUP_DIR=/opt/a2a/backups
AUTO_BACKUP_ENABLED=true
AUTO_BACKUP_INTERVAL=86400000  # 24 hours

# ===== EXTERNAL SERVICES =====
# Redis (optional, for distributed caching)
# REDIS_URL=redis://localhost:6379

# Email notifications (optional)
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your-email@example.com
# SMTP_PASSWORD=your-email-password
# SMTP_FROM=noreply@example.com

# ===== CUSTOM CONFIGURATION =====
# Add your custom environment variables below
