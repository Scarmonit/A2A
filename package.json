{
  "name": "a2a-mcp-server",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
    "build": "tsc",
    "lint": "tsc --noEmit",
    "start": "node dist/index.js",
    "agent:continuous": "node --max-old-space-size=2048 --enable-source-maps dist/index.js",
    "vercel:build": "npm run build",
    "vercel:dev": "vercel dev",
    "vercel:deploy": "vercel --prod",
    "try": "node dist/scripts/try.js",
    "test": "npm run build && tsx --test tests/greenlet-integration.test.ts",
    "unit": "npm run build && tsx --test tests/enhanced-features.test.ts tests/greenlet-integration.test.ts",
    "e2e": "npm run build && node --test dist/tests/integration/e2e-monitoring.test.js",
    "integration": "npm run build && node --test dist/tests/integration/*.test.js",
    "test:integration": "npm run integration",
    "test:integration:websocket": "npm run build && node --test dist/tests/integration/dashboard-websocket.test.js",
    "test:integration:monitoring": "npm run build && node --test dist/tests/integration/mcp-monitoring.test.js",
    "test:integration:load": "npm run build && node --test dist/tests/integration/dashboard-load.test.js",
    "test:integration:e2e": "npm run e2e",
    "test:python": "python3 -m pytest tests/python/test_greenlet_agent.py -v",
    "test:all": "npm run test && npm run test:python",
    "greenlet:start": "npm run build && node dist/cli/a2a-cli.js start",
    "greenlet:cli": "npm run build && node dist/cli/a2a-cli.js",
    "warp:setup": "npm run build && node dist/scripts/warp-setup.js",
    "warp:test-models": "npm run build && node dist/scripts/warp-test-models.js",
    "warp:monitor-gpu": "npm run build && node dist/scripts/warp-monitor-gpu.js",
    "warp:benchmark": "npm run build && node dist/scripts/warp-benchmark.js",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:studio": "prisma studio",
    "db:seed": "node dist/prisma/seed.js",
    "ssh:setup": "powershell -ExecutionPolicy Bypass -File ./scripts/setup-openssh.ps1",
    "ssh:test": "npm run build && node dist/tests/ssh-test.js",
    "ssh:example": "npm run build && node dist/examples/ssh-integration-example.js",
    "ssh:deploy": "npm run build && node dist/scripts/ssh-deploy.js",
    "continue:setup": "npm run build && node dist/scripts/continue-setup.js",
    "continue:index": "npm run build && node dist/scripts/continue-index.js",
    "continue:mcp-server": "npm run build && node dist/scripts/continue-mcp-server.js",
    "continue:test": "npm run build && node dist/tests/continue-test.js"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.5.0",
    "@prisma/client": "^6.18.0",
    "axios": "^1.7.7",
    "express": "^4.21.2",
    "pino": "^9.6.0",
    "prom-client": "^15.1.3",
    "ssh2": "^1.16.0",
    "uuid": "^11.0.3",
    "ws": "^8.18.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/node": "^22.10.2",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.13",
    "dotenv": "^16.4.7",
    "prisma": "^6.2.1",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2"
  }
}
