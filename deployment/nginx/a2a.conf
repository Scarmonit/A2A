# A2A MCP Server - Nginx Configuration
# This configuration sets up a reverse proxy for the A2A MCP Server

# Rate limiting zone - adjust based on your needs
limit_req_zone $binary_remote_addr zone=a2a_limit:10m rate=10r/s;

# WebSocket connection upgrade mapping
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Upstream configuration
upstream a2a_backend {
    # Docker deployment
    server 127.0.0.1:8787;

    # For multiple instances (horizontal scaling), add more servers:
    # server 127.0.0.1:8788;
    # server 127.0.0.1:8789;

    keepalive 32;
}

# HTTP Server - Redirects to HTTPS
server {
    listen 80;
    listen [::]:80;

    server_name your.domain.com;  # CHANGE THIS to your domain

    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server - Main configuration
server {
    # SSL configuration (uncomment after obtaining SSL certificate)
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;

    # For testing without SSL, use:
    listen 80;
    listen [::]:80;

    server_name your.domain.com;  # CHANGE THIS to your domain

    # SSL Certificate paths (configure after running certbot)
    # ssl_certificate /etc/letsencrypt/live/your.domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your.domain.com/privkey.pem;
    # ssl_trusted_certificate /etc/letsencrypt/live/your.domain.com/chain.pem;

    # SSL Security Settings
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;
    # ssl_stapling on;
    # ssl_stapling_verify on;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # HSTS (uncomment after SSL is configured and tested)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging
    access_log /var/log/nginx/a2a-access.log;
    error_log /var/log/nginx/a2a-error.log;

    # Max request size (adjust based on your needs)
    client_max_body_size 10M;

    # Timeouts for long-running operations
    proxy_connect_timeout 60s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    # Root location - Proxy to A2A backend
    location / {
        # Rate limiting
        limit_req zone=a2a_limit burst=20 nodelay;

        # Proxy headers
        proxy_pass http://a2a_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Buffering
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint - No rate limiting
    location /healthz {
        proxy_pass http://a2a_backend/healthz;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }

    # Metrics endpoint - Restrict access
    location /metrics {
        # Allow only from localhost and private networks
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;

        proxy_pass http://a2a_backend/metrics;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }

    # Grafana (if monitoring stack is enabled)
    location /grafana/ {
        proxy_pass http://127.0.0.1:3001/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Prometheus (if monitoring stack is enabled) - Restrict access
    location /prometheus/ {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;

        proxy_pass http://127.0.0.1:9091/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}

# Optional: Separate server block for admin panel or dashboard
# server {
#     listen 443 ssl http2;
#     server_name admin.your.domain.com;
#
#     # SSL configuration (same as above)
#
#     # Admin-specific configuration
#     location / {
#         # Add authentication
#         auth_basic "Admin Area";
#         auth_basic_user_file /etc/nginx/.htpasswd;
#
#         proxy_pass http://a2a_backend;
#         # ... proxy settings
#     }
# }
