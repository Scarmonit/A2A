---
# Namespace for A2A MCP Server
apiVersion: v1
kind: Namespace
metadata:
  name: a2a-mcp
  labels:
    name: a2a-mcp

---
# PersistentVolumeClaim for data persistence
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: a2a-data-pvc
  namespace: a2a-mcp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
# ConfigMap for environment configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: a2a-config
  namespace: a2a-mcp
data:
  METRICS_PORT: "3000"
  STREAM_PORT: "8787"
  STREAM_HOST: "0.0.0.0"
  LOG_LEVEL: "info"
  NODE_ENV: "production"

---
# Deployment for A2A MCP Server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: a2a-mcp-server
  namespace: a2a-mcp
  labels:
    app: a2a-mcp
    component: server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: a2a-mcp
      component: server
  template:
    metadata:
      labels:
        app: a2a-mcp
        component: server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: a2a-mcp
        image: scarmonit/a2a-mcp:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 3000
          protocol: TCP
        - name: websocket
          containerPort: 8787
          protocol: TCP
        env:
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: a2a-config
              key: METRICS_PORT
        - name: STREAM_PORT
          valueFrom:
            configMapKeyRef:
              name: a2a-config
              key: STREAM_PORT
        - name: STREAM_HOST
          valueFrom:
            configMapKeyRef:
              name: a2a-config
              key: STREAM_HOST
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: a2a-config
              key: LOG_LEVEL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: a2a-config
              key: NODE_ENV
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: data
          mountPath: /app/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: a2a-data-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
# Service for metrics endpoint
apiVersion: v1
kind: Service
metadata:
  name: a2a-mcp-metrics
  namespace: a2a-mcp
  labels:
    app: a2a-mcp
    component: metrics
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: metrics
  selector:
    app: a2a-mcp
    component: server

---
# Service for WebSocket streaming
apiVersion: v1
kind: Service
metadata:
  name: a2a-mcp-websocket
  namespace: a2a-mcp
  labels:
    app: a2a-mcp
    component: websocket
spec:
  type: LoadBalancer
  ports:
  - port: 8787
    targetPort: 8787
    protocol: TCP
    name: websocket
  selector:
    app: a2a-mcp
    component: server
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600

---
# HorizontalPodAutoscaler for auto-scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: a2a-mcp-hpa
  namespace: a2a-mcp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: a2a-mcp-server
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

---
# ServiceMonitor for Prometheus (if using Prometheus Operator)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: a2a-mcp-monitor
  namespace: a2a-mcp
  labels:
    app: a2a-mcp
spec:
  selector:
    matchLabels:
      app: a2a-mcp
      component: metrics
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
